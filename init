#!/bin/sh
# Copyright 2007 Mike Kelly <pioto@pioto.org>
# Released under the terms of the GNU General Public License v2
#
# An init script for initramfs, for loading a system with tuxonice and a
# dm-crypt encrypted swap device.
#
# Based upon a script from: http://www.disciplina.net/howto/initscript

PATH="/bin:/sbin:/usr/bin:/usr/sbin"

einfo() { echo -ne " \033[32;01m*\033[0m ${@}\n"; }
ewarn() { echo -ne " \033[33;01m*\033[0m ${@}\n"; }
eerror() { echo -ne " \033[31;01m*\033[0m ${@}\n"; }

einfo "Pioto's initramfs booting..."

#root="/dev/mapper/vg0-root"
init="/sbin/init"
resume="swap:/dev/mapper/crypt-swap0"
resume_real="/dev/mapper/vg0-swap0"

mount -n -t proc none /proc
mount -n -t sysfs none /sys
CMDLINE=`cat /proc/cmdline`

for param in $CMDLINE ; do
	case "$param" in
		root=*|init=*|resume=*|resume_real=*)
			eval "$param"
			;;
		rescue)
			rescue="y"
			;;
	esac
done


if [ -z "$root" ]; then
	eerror "No root filesystem specified"
	eerror "Please append a correct \"root=\" boot option"
	eerror "Dropping you to a limited shell."
	eerror "press CTRL-ALT-Del for reboot"
	exec /bin/sh
fi

# populate /dev with meaningful stuff
einfo "Scanning for device nodes..."
mdev -s

einfo "Finding lvm devices..."
/sbin/vgscan --mknodes
einfo "Activating lvm devices..."
/sbin/vgchange -a y
einfo "Opening $(basename "${resume#swap:}")..."
# boot up will halt here until a key is typed in
if [ ! -e "$resume_real" ]; then
	eerror "Could not find swap device to resume from."
	eerror "Dumping you to a shell to fix this."
	exec /bin/sh
fi
/sbin/cryptsetup luksOpen "$resume_real" "$(basename "${resume#swap:}")" \
	|| exit 1

# make sure we resume here, before we mount our root device
einfo "Activating tuxonice..."
echo "$resume" > /sys/power/tuxonice/resume
echo 1 > /sys/power/tuxonice/do_resume

einfo "Mounting root device: $root ..."
mount -n $root /root -o ro

if [ -n "$rescue" ]; then
	ewarn "\"rescue\" kernel parameter received."
	ewarn "Going to a rescue shell..."
	exec /bin/sh
fi

einfo "Unmounting /sys and /proc ..."
umount -f /sys /proc

einfo "Changing to $root and handing over to init..."
exec run-init /root "$init" "$@"

# vim: set ft=sh tw=78:
